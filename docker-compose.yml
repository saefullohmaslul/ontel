version: '3.0'

services: 
  postgres:
    build:
      context: docker/postgres
      dockerfile: Dockerfile
    environment: 
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_MULTIPLE_DATABASES}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - ${POSTGRES_DEV_PORT}:5432
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "14268:14268"   # jaeger-collector HTTP server (tracer provider)
      - "16686:16686"   # HTTP server (browser UI)
  
  customer_service:
    build:
      context: services/customer-service
      dockerfile: Dockerfile
      target: dev
    env_file:
      - services/customer-service/.env
    command: sh -c "make start-dev"
    restart: on-failure
    volumes:
      - type: bind
        source: ./services/customer-service
        target: /app
    ports:
      - 7150:7150
    depends_on:
      - customer_service_migration

  customer_service_migration:
    build:
      dockerfile: Dockerfile
      context: services/customer-service
      target: dev
    command: sh -c "make migrate"
    depends_on:
      - postgres
    restart: on-failure
    env_file:
      - services/customer-service/.env

  order_service:
    build:
      context: services/order-service
      dockerfile: Dockerfile
      target: dev
    env_file:
      - services/order-service/.env
    command: sh -c "make start-dev"
    restart: on-failure
    volumes:
      - type: bind
        source: ./services/order-service
        target: /app
    ports:
      - 7151:7151
    depends_on:
      - order_service_migration

  order_service_migration:
    build:
      dockerfile: Dockerfile
      context: services/order-service
      target: dev
    command: sh -c "make migrate"
    depends_on:
      - postgres
    restart: on-failure
    env_file:
      - services/order-service/.env
